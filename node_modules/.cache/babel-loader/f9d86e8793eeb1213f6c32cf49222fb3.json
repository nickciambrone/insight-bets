{"ast":null,"code":"import _objectSpread from \"/Users/nickciambrone/Desktop/insight-bets/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport CartActionTypes from './cart.types';\nimport { addItemToCart, removeItem } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n    //if the action type is ADD_ITEM\n\n    case CartActionTypes.ADD_ITEM:\n      // we are going to return a new state,\n      return _objectSpread({}, state, {\n        //the cartItems property is going to assume the value\n        //of the return value of the addItemToCart function with state.cartItems\n        //as the first parameter and the cartItem sent from collection-item as the second parameter \n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id != action.payload.id)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItem(state.cartItems, action.payload)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/nickciambrone/Desktop/insight-bets/src/redux/cart/cart.reducer.jsx"],"names":["CartActionTypes","addItemToCart","removeItem","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM","filter","cartItem","id","REMOVE_ITEM"],"mappings":";AACA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAuBC,UAAvB,QAAyC,cAAzC;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,eAAe,CAACU,kBAArB;AACI,+BACOH,KADP;AAEIH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFnB;AAIJ;;AACA,SAAKJ,eAAe,CAACW,QAArB;AACI;AACA,+BAGOJ,KAHP;AAII;AACA;AACA;AACAF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAP5B;;AASJ,SAAKZ,eAAe,CAACa,UAArB;AACI,+BACON,KADP;AAEIF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CAAwBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,IAAeR,MAAM,CAACI,OAAP,CAAeI,EAAnE;AAFf;;AAIJ,SAAKhB,eAAe,CAACiB,WAArB;AACI,+BACOV,KADP;AAEIF,QAAAA,SAAS,EAAEH,UAAU,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFzB;;AAIJ;AACI,aAAOL,KAAP;AA7BR;AA+BH,CAhCD;;AAiCA,eAAeD,WAAf","sourcesContent":["\nimport CartActionTypes from './cart.types'\nimport { addItemToCart,removeItem } from './cart.utils'\nconst INITIAL_STATE = {\n    hidden: true,\n    cartItems: []\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return {\n                ...state,\n                hidden: !state.hidden\n            }\n        //if the action type is ADD_ITEM\n        case CartActionTypes.ADD_ITEM:\n            // we are going to return a new state,\n            return {\n                // the state is going to = the same thing as before (...state)\n                //with one change...\n                ...state,\n                //the cartItems property is going to assume the value\n                //of the return value of the addItemToCart function with state.cartItems\n                //as the first parameter and the cartItem sent from collection-item as the second parameter \n                cartItems: addItemToCart(state.cartItems, action.payload)\n            }\n        case CartActionTypes.CLEAR_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter((cartItem) => cartItem.id != action.payload.id)\n            }\n        case CartActionTypes.REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: removeItem(state.cartItems, action.payload)\n            }\n        default:\n            return state\n    }\n}\nexport default cartReducer"]},"metadata":{},"sourceType":"module"}