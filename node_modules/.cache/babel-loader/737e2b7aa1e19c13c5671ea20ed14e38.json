{"ast":null,"code":"var _jsxFileName = \"/Users/nickciambrone/Desktop/insight-bets/src/App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props; //this.unsSubscribeFromAuth = firebase.auth().onAuthStateChanged() , this function\n    // fires off whenever someone logs in or out and it takes in an async \n    //function with userAuth as a parameter, this parameter holds the value of the user information generated\n    //by firebase (if the user is logged in) or null, if the user is logged out. \n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      //if the user in fact logged in\n      if (userAuth) {\n        //create a userRef variable, which awaits a return value from createUserProfileDocument(userAuth)\n        //createProfileDocument takes in the this userAuth object and returns the document in the users collection\n        //at/user/:userAuth.uid, if one doesnt exist, we create one and return it anyway\n        const userRef = await createUserProfileDocument(userAuth); //this firebase document has an onSnapshot method that listens for changes in the document's data,\n        //it will return the data of the document its called on at the time its called\n\n        userRef.onSnapshot(snapShot => {\n          //with that data, we set the state with only the parameters that we want (the ones we created \n          //with userRef.set() in firebase.utils )\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data() //console log the state to see the changes\n\n          }, () => console.log(this.state));\n        });\n      } //if the user isnt logged in, just this.state.currentUser to null, (userAuth=null\n      //if the user is not signed in when auth.onAuthStateChanged is called)\n\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/sign-in\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(SignInAndSignUp, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  user\n}) => ({\n  currentUser: user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/nickciambrone/Desktop/insight-bets/src/App.js"],"names":["React","Switch","Route","Redirect","connect","HomePage","ShopPage","Header","SignInAndSignUp","auth","createUserProfileDocument","setCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","console","log","state","componentWillUnmount","render","currentUser","mapStateToProps","user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,eAAP,MAA4B,2DAA5B;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;AACA,SAASC,cAAT,QAA+B,2BAA/B;;AACA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,mBAFgC,GAEV,IAFU;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEJ,MAAAA;AAAF,QAAqB,KAAKK,KAAhC,CADkB,CAGlB;AACA;AACA;AACA;;AAEA,SAAKF,mBAAL,GAA2BL,IAAI,CAACQ,kBAAL,CAAwB,MAAMC,QAAN,IAAkB;AACnE;AACA,UAAIA,QAAJ,EAAc;AACZ;AACA;AACA;AACA,cAAMC,OAAO,GAAG,MAAMT,yBAAyB,CAACQ,QAAD,CAA/C,CAJY,CAKZ;AACA;;AACAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAI;AAC7B;AACA;AACAV,UAAAA,cAAc,CAAC;AACbW,YAAAA,EAAE,EAAED,QAAQ,CAACC,EADA;AAEb,eAAGD,QAAQ,CAACE,IAAT,EAFU,CAGb;;AAHa,WAAD,EAIX,MAAMC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,CAJK,CAAd;AAKD,SARD;AASD,OAlBkE,CAmBnE;AACA;;;AACAf,MAAAA,cAAc,CAACO,QAAD,CAAd;AAED,KAvB0B,CAA3B;AAwBD;;AACDS,EAAAA,oBAAoB,GAAG;AACrB,SAAKb,mBAAL;AACD;;AAEDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEvB,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKU,KAAL,CAAWa,WAAX,gBACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,gBAGI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAoBD;;AA7D+B;;AA+DlC,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,MAAe;AACrCF,EAAAA,WAAW,EAAGE,IAAI,CAACF;AADkB,CAAf,CAAxB;;AAGA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACtCtB,EAAAA,cAAc,EAAEoB,IAAI,IAAIE,QAAQ,CAACtB,cAAc,CAACoB,IAAD,CAAf;AADM,CAAL,CAAnC;;AAGA,eAAe3B,OAAO,CAAC0B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport './App.css';\nimport { connect } from 'react-redux';\nimport HomePage from './pages/homepage/homepage.component'\nimport ShopPage from './pages/shop/shop.component'\nimport Header from './components/header/header.component'\nimport SignInAndSignUp from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils'\nimport { setCurrentUser } from './redux/user/user.actions'\nclass App extends React.Component {\n\n  unsubscribeFromAuth = null;\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n\n    //this.unsSubscribeFromAuth = firebase.auth().onAuthStateChanged() , this function\n    // fires off whenever someone logs in or out and it takes in an async \n    //function with userAuth as a parameter, this parameter holds the value of the user information generated\n    //by firebase (if the user is logged in) or null, if the user is logged out. \n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      //if the user in fact logged in\n      if (userAuth) {\n        //create a userRef variable, which awaits a return value from createUserProfileDocument(userAuth)\n        //createProfileDocument takes in the this userAuth object and returns the document in the users collection\n        //at/user/:userAuth.uid, if one doesnt exist, we create one and return it anyway\n        const userRef = await createUserProfileDocument(userAuth);\n        //this firebase document has an onSnapshot method that listens for changes in the document's data,\n        //it will return the data of the document its called on at the time its called\n        userRef.onSnapshot(snapShot => {\n          //with that data, we set the state with only the parameters that we want (the ones we created \n          //with userRef.set() in firebase.utils )\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n            //console log the state to see the changes\n          }, () => console.log(this.state))\n        })\n      }\n      //if the user isnt logged in, just this.state.currentUser to null, (userAuth=null\n      //if the user is not signed in when auth.onAuthStateChanged is called)\n      setCurrentUser(userAuth);\n\n    })\n  }\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route\n            exact\n            path='/sign-in'\n            render={() =>\n              this.props.currentUser ? (\n                <Redirect to='/' />\n              ) : (\n                  <SignInAndSignUp />\n                )\n            } />\n\n        </Switch>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = ({ user }) => ({\n  currentUser : user.currentUser\n})\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}